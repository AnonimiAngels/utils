CMAKE_MINIMUM_REQUIRED(VERSION 3.30...3.31)

LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")
INCLUDE(MNG)

if(NOT TARGET fmt)
	MNG_ADD_PACKAGE(
		NAME FMT
		GITHUB_REPOSITORY fmtlib/fmt
		SYSTEM
		GIT_TAG master
		OPTIONS
			"FMT_PEDANTIC ON"
			"FMT_WERROR ON"
			"FMT_SYSTEM_HEADERS ON"
			"FMT_UNICODE ON"
	)
endif()

if(NOT TARGET spdlog)
	MNG_ADD_PACKAGE(
		NAME SPDLOG
		GITHUB_REPOSITORY gabime/spdlog
		GIT_TAG v1.x
		SYSTEM
		OPTIONS
			"SPDLOG_FMT_EXTERNAL ON"
			"SPDLOG_WCHAR_TO_UTF8_SUPPORT ON"
			"SPDLOG_NO_EXCEPTIONS ON"
			"SPDLOG_SYSTEM_INCLUDES ON"
			"SPDLOG_INSTALL OFF"
			"SPDLOG_BUILD_TESTS OFF"
			"SPDLOG_BUILD_EXAMPLE OFF"
			"SPDLOG_BUILD_BENCHMARKS OFF"
	)
endif()

if (NOT TARGET reproc++)
	MNG_ADD_PACKAGE(
		NAME REPROC
		GITHUB_REPOSITORY AnonimiAngels/reproc
		GIT_TAG main
		SYSTEM
		OPTIONS
			"REPROC_DEVELOP OFF"
			"REPROC_EXAMPLES OFF"
			"REPROC_INSTALL OFF"
			"REPROC++ ON"
			"REPROC_MULTITHREADED ON"
	)
	# Remove the warnings for reproc
	target_compile_options(reproc++ PRIVATE -w)
endif()

if(NOT TARGET ghc_filesystem)
	MNG_ADD_PACKAGE(
		NAME GHC_FILESYSTEM
		GITHUB_REPOSITORY gulrak/filesystem
		GIT_TAG master
		SYSTEM
		OPTIONS
			"GHC_FILESYSTEM_BUILD_TESTING OFF"
			"GHC_FILESYSTEM_BUILD_EXAMPLES OFF"
			"GHC_FILESYSTEM_WITH_INSTALL OFF"
			"GHC_FILESYSTEM_BUILD_STD_TESTING OFF"
	)
endif()

# Get current directory name
get_filename_component(CURRENT_DIR_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)
PROJECT(${CURRENT_DIR_NAME} VERSION 1.0.0 LANGUAGES CXX)

file(GLOB_RECURSE PROJECT_SOURCES CONFIGURE_DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/src/*.c*")
file(GLOB_RECURSE PROJECT_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/inc/*.h*")

add_library(${PROJECT_NAME} ${PROJECT_SOURCES} ${PROJECT_HEADERS})
target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_11)
target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/inc)
target_link_libraries(${PROJECT_NAME} PUBLIC utils::utils)
target_link_options(${PROJECT_NAME} PRIVATE $<$<CXX_COMPILER_ID:GNU,Clang>:-Wl,--gc-sections> $<$<CXX_COMPILER_ID:MSVC>:/OPT:REF>)
set_target_properties(${PROJECT_NAME} PROPERTIES CXX_STANDARD 11 CXX_STANDARD_REQUIRED YES CXX_EXTENSIONS NO)